@model IEnumerable<DormitoryManagement.Models.Floor>
@using DormitoryManagement.Models;
@using DormitoryManagement.DAL;

@{
    ViewBag.Title = "Manage Room";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}
<div class="container-fluid">
    <h3 class="text-dark mb-1 text-center my-5">Manage Room</h3>
</div>
<div class="container" id="container-form-checkbed">
    <section id="form-checkbed" class="newsletter-subscribe">
        <div class="container">
            @if (ViewBag.Error != null) {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <strong>Holy guacamole!</strong> You should check in on some of those fields below.
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }
            <div class="intro"></div>
            <form class="form-inline" method="get" action="ManageRoom" id="form-checkbed">
                <div class="form-group">
                    <select class="form-control" name="domId">
                        <option value="0" selected>Dorm</option>
                        @foreach (Dom dom in ViewBag.Doms) {
                            if (Request.Params["domId"] != null && Request.Params["domId"].Equals(dom.Id.ToString())) {
                                <option value="@dom.Id" selected>@dom.Name</option>
                            } else {
                                <option value="@dom.Id">@dom.Name</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group"><button class="btn btn-primary" type="submit">Check</button></div>
            </form>
        </div>
    </section>
</div>
<div class="container">
    <table id="table-checkbed" class="table table-striped table-bordered" cellspacing="0" width="100%">

        <tbody id="checkbed-tbody">

            @foreach (Floor floor in Model.Reverse()) {
                List<Room> list1 = new List<Room>();
                List<Room> list2 = new List<Room>();
                int i = 0;
                foreach (Room room in floor.Rooms) {
                    if (i++ % 2 == 0) {
                        list1.Add(room);
                    } else {
                        list2.Add(room);
                    }

                }

                <tr rd="checkbed-tr">
                    @foreach (Room room in list2) {
                    <td style="padding:1rem; @(room.HasFull() ? " background-color: #d6d8d9; " : "") @(room.CanUse ? "" : " background-color: #f8d7da; ")">
                        <span style="cursor: pointer; font-size:larger;" onclick="location.href='@Url.Action("RoomDetail", "Manager",new { room.Id })'">
                            @room.GetRoomName()
                        </span>
                    </td>
                    }
                </tr>
                <tr rd="checkbed-tr">
                    @foreach (Room room in list1) {
                        <td style="padding:1rem; @(room.HasFull() ? " background-color: #d6d8d9; " : "") @(room.CanUse ? "" : " background-color: #f8d7da; ")">
                            <span style="cursor: pointer; font-size:larger;" onclick="location.href='@Url.Action("RoomDetail", "Manager",new { room.Id })'">
                                @room.GetRoomName()
                            </span>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />
</div>